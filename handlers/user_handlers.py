from telebot import types
from bot_init import bot, user_states, user_carts
from keyboards import create_main_keyboard, create_categories_keyboard, create_admin_main_keyboard
from database import get_products_by_category, get_products, get_product_by_id, save_feedback
from utils.helpers import format_cart_text, format_order_summary
from handlers.cart_handlers import show_cart
from config import ADMIN_IDS, logger
from handlers.admin_handlers import handle_admin

@bot.message_handler(commands=['start'])
def handle_start(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    print(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    
    try:
        if user_id in ADMIN_IDS:
            welcome_text = (
                f"üëã –í—ñ—Ç–∞—î–º–æ, –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–µ {user_name}!\n\n"
                "–í–∏ –º–∞—î—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.\n"
                "–°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è /admin –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –º–∞–≥–∞–∑–∏–Ω–æ–º."
            )
        else:
            welcome_text = (
                f"üëã –í—ñ—Ç–∞—î–º–æ –≤ –±–æ—Ç—ñ –ö–∞–Ω—Ü–µ–ª—è—Ä—Å—å–∫–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω—É, {user_name}!\n\n"
                "–Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥, –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –±—ñ–ª—å—à–µ."
            )
        
        bot.send_message(message.chat.id, welcome_text, reply_markup=create_admin_main_keyboard(user_id))
        logger.info(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /start –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /start –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ /start –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ /start –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")
        bot.send_message(message.chat.id, "‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

@bot.message_handler(commands=['help'])
def handle_help(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    print(f"–ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    help_text = (
        "üìã *–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:*\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\n"
        "/help - –î–æ–ø–æ–º–æ–≥–∞\n"
        "/info - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –º–∞–≥–∞–∑–∏–Ω\n"
        "/catalog - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏\n"
        "/order - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫\n"
        "/feedback - –ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫"
    )
    if message.from_user.id in ADMIN_IDS:
        help_text += "\n\n*–ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:*\n"
        help_text += "/admin - –í—ñ–¥–∫—Ä–∏—Ç–∏ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å\n"
        help_text += "/additem - –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä\n"
        help_text += "/removeitem - –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä\n"
        help_text += "/orders - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
        help_text += "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω—É"
    bot.send_message(message.chat.id, help_text, parse_mode='Markdown')
    logger.info(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /help –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {message.from_user.id}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /help –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {message.from_user.id}")

@bot.message_handler(commands=['info'])
def handle_info(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /info –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    print(f"–ö–æ–º–∞–Ω–¥–∞ /info –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    info_text = (
        "üè¢ *–ü—Ä–æ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω*\n\n"
        "–ü—Ä–æ–ø–æ–Ω—É—î–º–æ —à–∏—Ä–æ–∫–∏–π –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —è–∫—ñ—Å–Ω–æ—ó –∫–∞–Ω—Ü–µ–ª—è—Ä—ñ—ó –¥–ª—è —à–∫–æ–ª–∏, –æ—Ñ—ñ—Å—É —Ç–∞ –¥–æ–º—É.\n\n"
        "üïó *–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏:*\n"
        "–ü–Ω-–ü—Ç: 9:00 - 18:00\n–°–±: 10:00 - 16:00\n–ù–¥: –≤–∏—Ö—ñ–¥–Ω–∏–π\n\n"
        "üìû –î–ª—è –∑–≤'—è–∑–∫—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è /feedback."
    )
    bot.send_message(message.chat.id, info_text, parse_mode='Markdown')
    logger.info(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /info –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {message.from_user.id}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /info –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {message.from_user.id}")

@bot.message_handler(commands=['catalog'])
def handle_catalog(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /catalog –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    print(f"–ö–æ–º–∞–Ω–¥–∞ /catalog –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    bot.send_message(message.chat.id, "üìö *–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é —Ç–æ–≤–∞—Ä—ñ–≤:*", reply_markup=create_categories_keyboard(), parse_mode='Markdown')
    logger.info(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /catalog –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {message.from_user.id}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /catalog –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {message.from_user.id}")

@bot.message_handler(commands=['order'])
def handle_order_command(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /order –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    print(f"–ö–æ–º–∞–Ω–¥–∞ /order –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    user_id = message.from_user.id
    show_cart(message.chat.id, user_id)
    logger.info(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /order –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /order –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")

@bot.message_handler(commands=['feedback'])
def handle_feedback(message):
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /feedback –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    print(f"–ö–æ–º–∞–Ω–¥–∞ /feedback –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ {message.from_user.id}")
    user_id = message.from_user.id
    user_states[user_id] = 'waiting_for_feedback'
    bot.send_message(message.chat.id, "üìù –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ª–∏—à—Ç–µ –≤–∞—à –≤—ñ–¥–≥—É–∫ –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è. –ú–∏ —Ü—ñ–Ω—É—î–º–æ –≤–∞—à—É –¥—É–º–∫—É!")
    logger.info(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /feedback –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /feedback –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")

@bot.message_handler(func=lambda message: message.from_user.id in user_states and user_states[message.from_user.id] == 'waiting_for_feedback')
def handle_feedback_message(message):
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–≥—É–∫ –≤—ñ–¥ {message.from_user.id}")
    print(f"–û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–≥—É–∫ –≤—ñ–¥ {message.from_user.id}")
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    feedback_text = message.text
    save_feedback(user_id, user_name, feedback_text)
    bot.send_message(message.chat.id, "üôè –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!")
    for admin_id in ADMIN_IDS:
        try:
            bot.send_message(
                admin_id,
                f"üí¨ *–ù–æ–≤–∏–π –≤—ñ–¥–≥—É–∫*\n\n–í—ñ–¥: {user_name} (ID: {user_id})\n–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {feedback_text}",
                parse_mode='Markdown'
            )
        except Exception as e:
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∞–¥–º—ñ–Ω–∞ {admin_id}: {e}")
            print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∞–¥–º—ñ–Ω–∞ {admin_id}: {e}")
    if user_id in user_states:
        del user_states[user_id]
    logger.info(f"–í—ñ–¥–≥—É–∫ –≤—ñ–¥ {user_id} –æ–±—Ä–æ–±–ª–µ–Ω–æ")
    print(f"–í—ñ–¥–≥—É–∫ –≤—ñ–¥ {user_id} –æ–±—Ä–æ–±–ª–µ–Ω–æ")

@bot.message_handler(func=lambda message: not message.text.startswith('/'))
def handle_text_buttons(message):
    user_id = message.from_user.id
    text = message.text.lower()
    
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {user_id}: {text}")
    print(f"–û—Ç—Ä–∏–º–∞–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {user_id}: {text}")
    
    if any(keyword in text for keyword in ['–ö–∞—Ç–∞–ª–æ–≥', '–∫–∞—Ç–∞–ª–æ–≥']):
        handle_catalog(message)
    elif any(keyword in text for keyword in ['–î–æ–ø–æ–º–æ–≥–∞', '–¥–æ–ø–æ–º–æ–≥–∞','help']):
        handle_help(message)
    elif any(keyword in text for keyword in ['–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', '—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è','—ñ–Ω—Ñ–∞']):
        handle_info(message)
    elif any(keyword in text for keyword in ['–ö–æ—à–∏–∫', '–∫–æ—à–∏–∫']):
        handle_order_command(message)
    elif message.text == 'üëë –ê–¥–º—ñ–Ω–ø–∞–Ω–µ–ª—å' and user_id in ADMIN_IDS:
        handle_admin(message)
    elif any(keyword in text for keyword in ['hello', 'hi', 'hey', '–ø—Ä–∏–≤—ñ—Ç', '–ü—Ä–∏–≤—ñ—Ç']):
        bot.send_message(
            message.chat.id,
            f"üëã –ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?"
        )
    elif any(keyword in text for keyword in ['price', 'cost', 'how much', '—Ü—ñ–Ω–∞', '–≤–∞—Ä—Ç—ñ—Å—Ç—å']):
        bot.send_message(
            message.chat.id,
            "üìä –í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –Ω–∞—à—ñ —Ü—ñ–Ω–∏ –≤ –∫–∞—Ç–∞–ª–æ–∑—ñ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /catalog."
        )
    elif any(keyword in text for keyword in ['delivery', 'shipping', '–¥–æ—Å—Ç–∞–≤–∫–∞']):
        bot.send_message(
            message.chat.id,
            "üöö –ú–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –¥–æ—Å—Ç–∞–≤–∫—É –∑–∞ –±—É–¥—å-—è–∫–æ—é –∞–¥—Ä–µ—Å–æ—é —É –º—ñ—Å—Ç—ñ. –î–µ—Ç–∞–ª—ñ –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–±–≥–æ–≤–æ—Ä—é—é—Ç—å—Å—è –ø—ñ—Å–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."
        )
    elif any(keyword in text for keyword in ['payment', 'pay', '–æ–ø–ª–∞—Ç–∞']):
        bot.send_message(
            message.chat.id,
            "üí≥ –ú–∏ –ø—Ä–∏–π–º–∞—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –æ–ø–ª–∞—Ç–∏, –≤–∫–ª—é—á–∞—é—á–∏ –∫—Ä–µ–¥–∏—Ç–Ω—ñ/–¥–µ–±–µ—Ç–æ–≤—ñ –∫–∞—Ä—Ç–∫–∏ —Ç–∞ –Ω–∞–∫–ª–∞–¥–µ–Ω–∏–π –ø–ª–∞—Ç—ñ–∂."
        )
    elif any(keyword in text for keyword in ['thanks', 'thank you', '–¥—è–∫—É—é']):
        bot.send_message(
            message.chat.id,
            "‚ò∫Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞! –û–∑–Ω–∞–π–æ–º—Ç–µ—Å—å –∑ –Ω–∞—à–∏–º –∫–∞—Ç–∞–ª–æ–≥–æ–º –∞–±–æ –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å, —è–∫—â–æ —î –∑–∞–ø–∏—Ç–∞–Ω–Ω—è."
        )
    else:
        bot.send_message(
            message.chat.id,
            "–ù–µ —Ä–æ–∑—É–º—ñ—é –≤–∞—à–æ–≥–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å /help –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥."
        )
    logger.info(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")